db.collection_name.updateMany(
    { "controlsApplied.country.effectiveDate": { $exists: true } },
    [
        {
            $set: {
                controlsApplied: {
                    $map: {
                        input: "$controlsApplied",
                        as: "control",
                        in: {
                            $mergeObjects: [
                                "$$control",
                                {
                                    country: {
                                        $cond: {
                                            if: { $isObject: "$$control.country" },
                                            then: {
                                                $mergeObjects: [
                                                    "$$control.country",
                                                    {
                                                        effectiveDate: {
                                                            $cond: {
                                                                if: { $eq: ["$$control.country.effectiveDate", null] },
                                                                then: null,
                                                                else: {
                                                                    $convert: {
                                                                        input: "$$control.country.effectiveDate",
                                                                        to: "date",
                                                                        onError: null
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            else: "$$control.country"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    ]
);

$(document).ready(function() {
    // Fetch the data from the backend
    $.ajax({
        url: "/api/your-endpoint",
        method: "GET",
        success: function(response) {
            // Get the container where the toggle buttons will be appended
            var container = $("#toggleContainer");

            // Loop through the data and append toggle buttons to the container
            $.each(response, function(key, value) {
                var label = $('<label class="checkbox-inline">')
                    .append(
                        $("<input>").attr({
                            type: 'checkbox',
                            class: 'toggle',
                            'data-key': key
                        }),
                        $("<span>").text(value)
                    );
                container.append(label);
            });

            // Add event listener to handle toggle state changes
            $(".toggle").on("change", function() {
                const isChecked = $(this).is(":checked");
                const state = isChecked ? "active" : "pause";
                const key = $(this).data('key');
                const dataToSend = { "key": key, "state": state };

                $.ajax({
                    url: "/your-backend-endpoint",
                    method: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(dataToSend),
                    success: function(response) {
                        console.log("Server response:", response);
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        console.error("Error:", textStatus, errorThrown);
                    }
                });
            });
        },
        error: function(jqXHR, textStatus, errorThrown) {
            console.error("Error fetching data:", textStatus, errorThrown);
        }
    });
});

$(document).ready(function() {
    // Fetch the data from the backend
    $.ajax({
        url: "/api/your-endpoint",
        method: "GET",
        success: function(response) {
            // Get the container where the toggle buttons will be appended
            var container = $("#toggleContainer");

            // Loop through the data and append toggle buttons to the container
            $.each(response, function(key, value) {
                var label = $('<label class="checkbox-inline">')
                    .append(
                        $("<input>").attr({
                            type: 'checkbox',
                            class: 'toggle',
                            'data-key': key,
                            checked: value === 'active' ? 'checked' : ''
                        }),
                        $("<span>").text(key)
                    );
                container.append(label);
            });

            // Add event listener to handle toggle state changes
            $(".toggle").on("change", function() {
                const isChecked = $(this).is(":checked");
                const state = isChecked ? "active" : "pause";
                const key = $(this).data('key');
                const dataToSend = { "key": key, "state": state };

                $.ajax({
                    url: "/your-backend-endpoint",
                    method: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(dataToSend),
                    success: function(response) {
                        console.log("Server response:", response);
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        console.error("Error:", textStatus, errorThrown);
                    }
                });
            });
        },
        error: function(jqXHR, textStatus, errorThrown) {
            console.error("Error fetching data:", textStatus, errorThrown);
        }
    });
});



